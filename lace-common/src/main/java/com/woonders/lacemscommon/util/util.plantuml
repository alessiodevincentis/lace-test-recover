@startuml

title __UTIL's Class Diagram__\n

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.AdvancedSearchUtil {
          {static} + JSF_NAME : String
          {static} + NAME : String
          + checkIfFilterAdvancedSearchIsNull()
          + isDateRightComparable()
          + isDateRightFormat()
          - isNullOrEmptyString()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.Age {
          - days : int
          - months : int
          - years : int
          + Age()
          + getDays()
          + getMonths()
          + getYears()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.AnalyticsUtil {
          {static} + JSF_NAME : String
          {static} + NAME : String
          {static} - MINUS_NINETY : int
          {static} - MINUS_ONE : int
          {static} - MINUS_SIXTY : int
          {static} - MINUS_THIRTY : int
          {static} - ZERO : int
          + getFromDateFormPresetDate()
          + getOperatorListByOperatoriSelezionatiAndRolename()
          + getToDateFormPresetDate()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.CfGenerator {
          {static} + JSF_NAME : String
          {static} + NAME : String
          {static} - COMUNI_FILE : String
          - codiceComuneMap : Map<String, String>
          - codiceMeseNumero : String[][]
          - comuneCodiceMap : Map<String, String>
          - elencoDispari : int[]
          - elencoPari : char[]
          {static} - log : Logger
          - mese : String[][]
          + CfGenerator()
          + calcolaCf()
          + elaboraComuneDaCodiceComune()
          + elaboraDataNascitaDaCf()
          + elaboraSessoDaCf()
          + getCodiceFiscale()
          - aggiungiVocali()
          - aggiungiX()
          - calcolaCodice()
          - generaCodiceComuneMap()
          - generaComuneCodiceMap()
          - generaComuniMap()
          - getAnnoCalc()
          - getCognomeCalc()
          - getConsonanti()
          - getGiornoCalc()
          - getNomeCalc()
          - getVocali()
          - modificaMese()
          - modificaNC()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      enum TipoMappaComuni {
        CODICE
        COMUNE
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.DateConversionUtil {
          {static} + JSF_NAME : String
          {static} + NAME : String
          {static} - dateFormatter : DateTimeFormatter
          {static} - dateTimeFormatter : DateTimeFormatter
          {static} - timeFormatter : DateTimeFormatter
          + addMonths()
          + addOrSubstractDays()
          + calcDateFromLocalDate()
          + calcDateFromLocalDateTime()
          + calcLocalDateFromDate()
          + calcLocalDateTimeFromDate()
          + calcStringFromLocalDate()
          + calcStringFromLocalDateTime()
          + calcUTCLocalDateTimeFromTimestamp()
          + convertToLocalDateTimeInRome()
          + convertToLocalDateTimeInUtc()
          + endMonth()
          + endYear()
          + formatDate()
          + formatDateInRomeTimeZone()
          + formatTime()
          + formatTimeInRomeTimeZone()
          + fromYearsToDate()
          + moveLocalDateTimeToRomeTimeZone()
          + startMonth()
          + startYear()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.DateToCalendar {
          {static} + NumberToText()
          {static} + addDays()
          {static} + arrotondamento()
          {static} + arrotondamentoSeiCifre()
          {static} + calculateAge()
          + calendarToDate()
          {static} + dateToCalendar()
          {static} + diffeDateMonth()
          {static} + diffeDateYear()
          {static} + differenceDatesInDays()
          {static} + fineMese()
          {static} + getDateWithoutTime()
          {static} + getEndYear()
          {static} + getStarYear()
          {static} + getTomorrowDate()
          {static} + inizioMese()
          {static} + patternData()
          {static} + patternDataOra()
          {static} + setMonth()
          {static} + settaGiorno()
          {static} - NumberToTextRicorsiva()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.IvaUtil {
          + fromLordoToNetto()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.LaceMailSender {
          {static} + JSF_NAME : String
          {static} + NAME : String
          {static} - FROM_EMAIL : String
          - mailSender : MailSender
          + mailSender()
          + sendEmail()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.LeadContestato {
          - devisProxLeadId : String
          - devisProxTenantId : String
          - laceLeadID : long
          - laceTenantName : String
          - logs : ArrayList<LeadContestatoLog>
          - requestNote : String
          - requestReason : int
          - resultReason : String
          - resultResponse : Boolean
          + LeadContestato()
          + LeadContestato()
          {static} + builder()
          + getDevisProxLeadId()
          + getDevisProxTenantId()
          + getLaceLeadID()
          + getLaceTenantName()
          + getLogs()
          + getRequestNote()
          + getRequestReason()
          + getResultReason()
          + getResultResponse()
          + setDevisProxLeadId()
          + setDevisProxTenantId()
          + setLaceLeadID()
          + setLaceTenantName()
          + setLogs()
          + setRequestNote()
          + setRequestReason()
          + setResultReason()
          + setResultResponse()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.LeadContestato.LeadContestatoBuilder {
          - devisProxLeadId : String
          - devisProxTenantId : String
          - laceLeadID : long
          - laceTenantName : String
          - logs : ArrayList<LeadContestatoLog>
          - requestNote : String
          - requestReason : int
          - resultReason : String
          - resultResponse : Boolean
          + build()
          + devisProxLeadId()
          + devisProxTenantId()
          + laceLeadID()
          + laceTenantName()
          + logs()
          + requestNote()
          + requestReason()
          + resultReason()
          + resultResponse()
          + toString()
          ~ LeadContestatoBuilder()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.LeadContestatoLog {
          - commento : String
          - executionDateTime : String
          - stato : String
          + LeadContestatoLog()
          + LeadContestatoLog()
          {static} + builder()
          + getCommento()
          + getExecutionDateTime()
          + getStato()
          + setCommento()
          + setExecutionDateTime()
          + setStato()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.LeadContestatoLog.LeadContestatoLogBuilder {
          - commento : String
          - executionDateTime : String
          - stato : String
          + build()
          + commento()
          + executionDateTime()
          + stato()
          + toString()
          ~ LeadContestatoLogBuilder()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.LeadContestatoService {
          {static} - log : Logger
          {static} + sendPOST()
          {static} - toHexString()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.NumberUtil {
          {static} + JSF_NAME : String
          {static} + NAME : String
          + ifNullToZero()
          + isNullOrZero()
          + italianCurrencyFormat()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.PredicateHelper {
          + getPredicateForAdvancedSearchCliente()
          + getPredicateForAdvancedSearchNominativo()
          + getPredicateForAntiriciclaggio()
          + getPredicateForCampagnaSmsNonClienti()
          + getPredicateForClienteByDataRecallNominativo()
          + getPredicateForClientiDaRichiamare()
          + getPredicateForCountNewLead()
          + getPredicateForDataRecallNominativoExpired()
          + getPredicateForDettaglioCampagna()
          + getPredicateForEsitoCampagna()
          + getPredicateForEsitoCampagnaAndTipo()
          + getPredicateForFindAppuntamenti()
          + getPredicateForFindByCognomeContainingAndUsername()
          + getPredicateForFindEstinzioniByStatoConteggioEstinzioneAndTipoClienteAndUsername()
          + getPredicateForFindOperatorByRoleNameInAndAzienda_Id()
          + getPredicateForFindPraticheCaricateWidget()
          + getPredicateForFindPraticheDaPerfezionare()
          + getPredicateForFindPratichePerfezionate()
          + getPredicateForFindPratichePerfezionateWidget()
          + getPredicateForImpegniRinnovabili()
          + getPredicateForListEsitoCampagnaSms()
          + getPredicateForMatchNominativiByCognomeAndNomeAndDataNascita()
          + getPredicateForNoticeBoardByAziendaId()
          + getPredicateForNuovaCampagnaMarketing()
          + getPredicateForOperatorByUsernameAndPermessiWrite()
          + getPredicateForPraticheRinnovabili()
          + getPredicateForPreventiviClientiInCorso()
          + getPredicateForTipoAndDataClienteNotNullAndProvenienzaAndBetweenDataInsAndStatoNominativoNotNullAndOperatorIn()
          + getPredicateForTipoClienteAndStatoPraticaAndBetweenDateAndOperatoreAndTipoPratica()
          + getPredicateForTipoClienteAndStatoPraticaAndBetweenDateAndOperatorsSelectedAndTipoPratica()
          + getPredicateForTrattenuteByDataRinnovoTrattenutaBeforeThanDays()
          + getPredicateForfindByStatoPraticaAndDataNotificaExpiredAndTipoClienteAndUsername()
          + getPredicateForfindByStatoPraticaAndTipoClienteAndUsername()
          - getCollectionStatoPraticaNotEqualsForConteggiEstinzione()
          - getPredicateForEsitoCampagnaAndTipo()
          - getPredicateForNuovaCampagnaMarketing()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.PreventivoPraticaUtil {
          + setEstinzioneDaPratica()
          + setEstinzioneDaTrattenuta()
          + setPraticaDaPreventivo()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.RequestUtil {
          {static} + JSF_NAME : String
          {static} + NAME : String
          + getTenantName()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      class com.woonders.lacemscommon.util.SimulatorUtil {
          {static} + JSF_NAME : String
          {static} + NAME : String
          + SimulatorUtil()
          + calcByAmount()
          + calcByAmount()
          + calcByPayment()
          + calcByPayment()
          + calcLoanAmount()
          + calcPayment()
          + calcRate()
          + calcTaeg()
          + calcTaeg()
          - calcAmountTotal()
          - calcCost()
          - calcCosts()
          - calcInterestsByAmount()
          - calcInterestsByPayment()
          - calcPercentageOnAmount()
          - calcRate()
          - calcSumCostsByAmount()
          - calcSumCostsByPayment()
          - calcUpright()
          - round()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace util {
      enum CostType {
        FINANCIAL
        TAEG
      }
    }
  }
  

  com.woonders.lacemscommon.util.AnalyticsUtil o-- com.woonders.lacemscommon.util.DateConversionUtil : dateConversionUtil
  com.woonders.lacemscommon.util.AnalyticsUtil o-- com.woonders.lacemscommon.service.OperatorService : operatorService
  com.woonders.lacemscommon.util.CfGenerator o-- com.woonders.lacemscommon.util.DateConversionUtil : dateConversionUtil
  com.woonders.lacemscommon.util.CfGenerator +-down- com.woonders.lacemscommon.util.CfGenerator.TipoMappaComuni
  com.woonders.lacemscommon.util.LeadContestato +-down- com.woonders.lacemscommon.util.LeadContestato.LeadContestatoBuilder
  com.woonders.lacemscommon.util.LeadContestatoLog +-down- com.woonders.lacemscommon.util.LeadContestatoLog.LeadContestatoLogBuilder
  com.woonders.lacemscommon.util.PredicateHelper o-- com.woonders.lacemscommon.util.DateConversionUtil : dateConversionUtil
  com.woonders.lacemscommon.util.PreventivoPraticaUtil o-- com.woonders.lacemscommon.service.OperatorService : operatorService
  com.woonders.lacemscommon.util.PreventivoPraticaUtil o-- com.woonders.lacemscommon.db.entityutil.TrattenutaUtil : trattenutaUtil
  com.woonders.lacemscommon.util.SimulatorUtil o-- com.woonders.lacemscommon.util.NumberUtil : numberUtil
  com.woonders.lacemscommon.util.SimulatorUtil o-- com.woonders.lacemscommon.service.SimulatorTableService : simulatorTableService
  com.woonders.lacemscommon.util.SimulatorUtil +-down- com.woonders.lacemscommon.util.SimulatorUtil.CostType


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
