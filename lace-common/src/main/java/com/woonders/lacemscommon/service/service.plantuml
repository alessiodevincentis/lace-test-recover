@startuml

title __SERVICE's Class Diagram__\n

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AccessLogService {
          {abstract} + getAccessLogList()
          {abstract} + getOne()
          {abstract} + saveLogin()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AmministrazioneService {
          {abstract} + completeAmministrazione()
          {abstract} + findByCodiceFiscale()
          {abstract} + findByPiva()
          {abstract} + findByRagioneSociale()
          {abstract} + findDistinctByCliente_Id()
          {abstract} + findDistinctByRagioneSocialeContaining()
          {abstract} + findOne()
          {abstract} + save()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AnalyticsClientiService {
          {abstract} + countPraticheByStatoPraticheCollectionAndBetweenDateAndTipoPratica()
          {abstract} + getAnalyticsProvvigioneClienteList()
          {abstract} + sumByMontanteOrErogatoPraticheByStatoPraticheCollectionAndBetweenDateAndTipoPratica()
          {abstract} + sumProvvigioniAgenzia()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AnalyticsNominativiService {
          {abstract} + countNominativiDiventatiClientiByProvenienza()
          {abstract} + countNominativiProvenienzaLead()
          {abstract} + countNominativiProvenienzaLeadToCliente()
          {abstract} + countNominativiTotaliByProvenienza()
          {abstract} + getAllFornitoriLead()
          {abstract} + getListNominativiTotalAndBecomeClienti()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AntiriciclaggioService {
          {abstract} + findPraticheAntiriciclaggio()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum TipoRicercaAntiriciclaggio {
        CF
        DATA
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AppService {
          {abstract} + findClienteByIdCliente()
          {abstract} + findClienteByIdPratica()
          {abstract} + findContoByIdCliente()
          {abstract} + findCoobbligatoByIdPratica()
          {abstract} + findDocumentoByIdCliente()
          {abstract} + findEstinzioniByIdPratica()
          {abstract} + findPraticaByCodicePratica()
          {abstract} + findPraticheByIdCliente()
          {abstract} + findPreventiviByIdCliente()
          {abstract} + findResidenzaByIdCliente()
          {abstract} + findTrattenuteByIdCliente()
          {abstract} + getDataNotificaByStatoPraticaAndAziendaId()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.AziendaService {
          {abstract} + count()
          {abstract} + findAll()
          {abstract} + getOne()
          {abstract} + save()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.BackupService {
          {abstract} + checkPassword()
          {abstract} + findAllAmministrazioni()
          {abstract} + findAllNominativi()
          {abstract} + findAllPratiche()
          {abstract} + getFileBackup()
          {abstract} + getLastBackupDate()
          {abstract} + saveBackupFile()
          {abstract} + updateDateBackup()
          {abstract} + updatePasswordBackup()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.CalendarioAppuntamentoFacade {
          {abstract} + sendSmsAppuntamento()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.CalendarioAppuntamentoService {
          {abstract} + changeTimeOne()
          {abstract} + deleteAppuntamento()
          {abstract} + findPraticheByIdCliente()
          {abstract} + getAppuntamenti()
          {abstract} + getAppuntamenti()
          {abstract} + getOne()
          {abstract} + saveAppuntamento()
          {abstract} + sendSmsAppuntamento()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum SMSType {
        CLIENT
        OPERATOR
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.CampagnaMarketingFacade {
          {abstract} + importaNominativi()
          {abstract} + saveAndSendCampagna()
          {abstract} + sendCampagna()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.CampagnaMarketingService {
          {abstract} + countByEsitoCampagna()
          {abstract} + countByEsitoCampagnaAndTipo()
          {abstract} + countByListEsitoCampagnaSms()
          {abstract} + findCampagna()
          {abstract} + findCampagnaSms()
          {abstract} + getCampagnaList()
          {abstract} + getCampagnaSmsList()
          {abstract} + getCliente()
          {abstract} + getNuovaCampagnaResultList()
          {abstract} + importaNominativi()
          {abstract} + save()
          {abstract} + saveAndSendCampagna()
          {abstract} + startSmsSendingCampagna()
          {abstract} + writeCampagnaInfoSent()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.CheckNominativoService {
          {abstract} + findNominativoByCognomeAndNomeAndDataNascita()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.ClienteManagerService {
          {abstract} + deleteEstinzione()
          {abstract} + deleteSecondaOccupazione()
          {abstract} + deleteTrattenuta()
          {abstract} + findByCliente_Id()
          {abstract} + findByPratica_CodicePratica()
          {abstract} + findClienteByCodiceFiscale()
          {abstract} + getPraticaById()
          {abstract} + saveNewClienteWithPratica()
          {abstract} + setAntiriciclaggioFileCaricato()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.CoobbligatoService {
          {abstract} + delete()
          {abstract} + findDistinctByPratica_CodicePratica()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.DashboardNominativoService {
          {abstract} + countImpegniRinnovabili()
          {abstract} + countNewLead()
          {abstract} + countNominativiInDataRecall()
          {abstract} + countNominativiOmessi()
          {abstract} + findImpegniRinnovabili()
          {abstract} + getNominativiInDataRecall()
          {abstract} + getNominativiWithDataRecallExpired()
          {abstract} + getNominativo()
          {abstract} + getTrattenuta()
          {abstract} + setNullDataRecallNominativo()
          {abstract} + setRinnovoTrattenute()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.DashboardService {
          {abstract} + calcTotalValueStatistics()
          {abstract} + countByDataRecallToday()
          {abstract} + countByDataRinnovoBeforeThanDays()
          {abstract} + countByDataRinnovoTrattenutaBeforeThanDays()
          {abstract} + countByPreventiviInCorso()
          {abstract} + countByTipoPraticaInMeseCorrente()
          {abstract} + countByTipoPraticaPerfezionataInAnnoCorrente()
          {abstract} + findByDataRecallToday()
          {abstract} + findByDataRinnovoBeforeThanDays()
          {abstract} + findByDataRinnovoTrattenutaBeforeThanDays()
          {abstract} + findByPreventiviInCorso()
          {abstract} + getClientePreventivo()
          {abstract} + getLastPraticheClientiCaricati()
          {abstract} + getPratica()
          {abstract} + getPraticaOnPreventivoCliente()
          {abstract} + removeNotificaPreventivo()
          {abstract} + removeNotificaRecall()
          {abstract} + removeNotificaRinnovoPratica()
          {abstract} + removeNotificaTrattenuta()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.DeleteClienteService {
          {abstract} + deleteByCf()
          {abstract} + deletePratica()
          {abstract} + findByCf()
          {abstract} + findPraticheToDeleteByCf()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.FatturazioneService {
          {abstract} + getPratica()
          {abstract} + perfezionaPratiche()
          {abstract} + perfezionaPratiche()
          {abstract} + searchPraticheDaPerfezionare()
          {abstract} + searchPratichePerfezionate()
          {abstract} + sumTotaleMontantePraticheDaPerfezionare()
          {abstract} + sumTotaleMontantePratichePerfezionate()
          {abstract} + sumTotaleProvvigionePraticheDaPerfezionare()
          {abstract} + sumTotaleProvvigionePratichePerfezionate()
          {abstract} + updateDecorrenzaPratica()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.FattureInCloudService {
          {abstract} + createNewDoc()
          {abstract} + eliminaFattura()
          {abstract} + getLinkFattura()
          {abstract} + inviaMailFattura()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum OggettoFattura {
        ACQUISTO_SMS
        value
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.FileService {
          {static} + MAXIMUM_STORAGE_SPACE_IN_BYTES : long
          {abstract} + canUploadFile()
          {abstract} + delete()
          {abstract} + deleteAllFilesInCategory()
          {abstract} + deleteFileForNoticeBoard()
          {abstract} + getFile()
          {abstract} + getFileForNoticeBoard()
          {abstract} + getFileListInCategory()
          {abstract} + getTotalFileAvailableSpace()
          {abstract} + getUsedStorageSpace()
          {abstract} + modifyUsedStorageSpace()
          {abstract} + save()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum FileCategory {
        ANAGRAFICA
        ANTIRICICLAGGIO
        PRATICA
        REDDITO
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum FileOperation {
        ADD
        REMOVE
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.FinanziariaService {
          {abstract} + findAll()
          {abstract} + getOne()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.GestionePermessiService {
          {abstract} + saveNewPermission()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.InfoAccountService {
          {abstract} + getOne()
          {abstract} + getOperatorsNumber()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.LogService {
          {abstract} + getNominativoLog()
          {abstract} + getPraticaLog()
          {abstract} + log()
          {abstract} + log()
          {abstract} + logCustomAction()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum CustomAction {
        EMAIL
        INVIO_CONTESTAZIONE
        RECEIVED_SMS
        RICEZ_CONTESTAZIONE_KO
        RICEZ_CONTESTAZIONE_OK
        SMS
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum TipoLog {
        NOMINATIVO
        PRATICA
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.NominativoService {
          {abstract} + creaPraticaDaPreventivoNominativo()
          {abstract} + delete()
          {abstract} + deletePreventivo()
          {abstract} + deleteTrattenuta()
          {abstract} + getNotificaLeadSms()
          {abstract} + saveNominativo()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.NoticeBoardService {
          {abstract} + addOperatorIntoOperatorSet()
          {abstract} + countNoticesToRead()
          {abstract} + delete()
          {abstract} + getAllNotices()
          {abstract} + getAllOperatorsByNoticeIdExcludeCreatorId()
          {abstract} + getNotice()
          {abstract} + isFileAttached()
          {abstract} + isNoticeToRead()
          {abstract} + save()
          {abstract} + setFileNameNull()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.OperatorService {
          {abstract} + changeData()
          {abstract} + changePassword()
          {abstract} + delete()
          {abstract} + findAll()
          {abstract} + findAllAppOperator()
          {abstract} + findAppOperatorListByAziendaId()
          {abstract} + findByRoleName()
          {abstract} + findByRoleNameInAndAzienda_Id()
          {abstract} + findByUsernameViewModel()
          {abstract} + findOperatorViewModelByUsername()
          {abstract} + getAllReceiveLeadEnabledOperatorByAziendaId()
          {abstract} + getOne()
          {abstract} + mail()
          {abstract} + mailList()
          {abstract} + save()
          {abstract} + save()
          {abstract} + updateReceiveLeadEnabledOperatorsByAziendaId()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.PaymentService {
          {abstract} + makePayment()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      enum ProcessingCode {
        CARD_DECLINED
        EXPIRED_CARD
        INCORRECT_CVC
        INCORRECT_NUMBER
        INCORRECT_ZIP
        INVALID_CVC
        INVALID_EXPIRY_MONTH
        INVALID_EXPIRY_YEAR
        INVALID_NUMBER
        INVALID_SWIPE_DATA
        MISSING
        PROCESSING_ERROR
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.PraticheInCorsoService {
          {abstract} + getAltrePraticheInCorsoByClienteSenzaPraticaAttualmenteVisibile()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.PreferenzaStatoPraticaService {
          {abstract} + getAllPreferenzaStatoPraticaByAziendaId()
          {abstract} + save()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.PreventivoService {
          {abstract} + creaPratica()
          {abstract} + deletePreventivo()
          {abstract} + getAllPraticheAttiveEstinguibili()
          {abstract} + getAllTrattenuteEstinguibili()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.RicaricaService {
          {abstract} + findFatturaPdfLinkByRicaricaId()
          {abstract} + getTopUpList()
          {abstract} + makePayment()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.RoleService {
          {abstract} + delete()
          {abstract} + findAll()
          {abstract} + findOne()
          {abstract} + save()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.SearchService {
          {abstract} + advancedSearchClienti()
          {abstract} + advancedSearchNominativi()
          {abstract} + completeClientiNominativi()
          {abstract} + filterListByCliente()
          {abstract} + findByNrContratto()
          {abstract} + findByTelefono()
          {abstract} + findOne()
          {abstract} + getOperatorList()
          {abstract} + getPratica()
          {abstract} + getSelectedClientePratica()
          {abstract} + searchByCodiceFiscale()
          {abstract} + searchByCognome()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.SettingService {
          {abstract} + findAll()
          {abstract} + getByAziendaId()
          {abstract} + getGeneralSetting()
          {abstract} + isSimulatorEnabledByAziendaId()
          {abstract} + save()
          {abstract} + save()
          {abstract} + setLeadIlComparatoreEnabled()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.SimulatorTableService {
          {abstract} + clone()
          {abstract} + delete()
          {abstract} + enable()
          {abstract} + findAll()
          {abstract} + findAssigned()
          {abstract} + findOne()
          {abstract} + getDetails()
          {abstract} + isTableUsedSomewhere()
          {abstract} + save()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.SmsLeadService {
          {abstract} + sendLeadNotificaSms()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.SmsService {
          {static} + DATE_PLACEHOLDER : String
          {static} + FIXED_IT_COUNTRY : String
          {static} + SMS_SPECIAL_CHAR_PLACEHOLDER : String
          {static} + SOURCE : String
          {static} + TIME_PLACEHOLDER : String
          {abstract} + calcSmsPricingInfo()
          {abstract} + calcSmsPricingInfo()
          {abstract} + sendSms()
          {abstract} + updateStatusNotificaSmsLead()
          {abstract} + updateStatusNotificaSmsMarketing()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.SmsServiceFacade {
          {abstract} + checkEnoughBalance()
          {abstract} + checkEnoughBalance()
          {abstract} + sendSms()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.StatoNominativoService {
          {abstract} + countNominativiByStatoNominativo()
          {abstract} + getNominativiByStatoNominativo()
          {abstract} + isContainsDataRecallNominativoLessToday()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.StatoPraticheService {
          {abstract} + countByStatoPraticaAndTipoClienteAndUsername()
          {abstract} + countEstinzioniByStatoConteggioEstinzioneAndTipoClienteAndUsername()
          {abstract} + findByStatoPraticaAndTipoClienteAndUsername()
          {abstract} + findEstinzioniByStatoConteggioEstinzioneAndTipoClienteAndUsername()
          {abstract} + getClientePratica()
          {abstract} + getEstinzione()
          {abstract} + getEstinzionePraticaCliente()
          {abstract} + isContainsDatesToBeNotified()
          {abstract} + isContainsDatesToBeNotified()
          {abstract} + updateDataNotificaByCodicePratica()
          {abstract} + updateDataNotificaConteggioEstinzioneByIdEstinzione()
          {abstract} + updateStatoConteggioEstinzioneByIdEstinzione()
          {abstract} + updateStatoPraticaByCodicePratica()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.TenantService {
          {abstract} + getActiveTenantList()
      }
    }
  }
  

  namespace com.woonders.lacemscommon {
    namespace service {
      interface com.woonders.lacemscommon.service.ValutazioneAmministrazioneService {
          {abstract} + delete()
          {abstract} + findDistinctByAmministrazione_CodiceAmm()
      }
    }
  }
  

  com.woonders.lacemscommon.service.AntiriciclaggioService +-down- com.woonders.lacemscommon.service.AntiriciclaggioService.TipoRicercaAntiriciclaggio
  com.woonders.lacemscommon.service.CalendarioAppuntamentoService +-down- com.woonders.lacemscommon.service.CalendarioAppuntamentoService.SMSType
  com.woonders.lacemscommon.service.FattureInCloudService +-down- com.woonders.lacemscommon.service.FattureInCloudService.OggettoFattura
  com.woonders.lacemscommon.service.FileService +-down- com.woonders.lacemscommon.service.FileService.FileCategory
  com.woonders.lacemscommon.service.FileService +-down- com.woonders.lacemscommon.service.FileService.FileOperation
  com.woonders.lacemscommon.service.LogService +-down- com.woonders.lacemscommon.service.LogService.CustomAction
  com.woonders.lacemscommon.service.LogService +-down- com.woonders.lacemscommon.service.LogService.TipoLog
  com.woonders.lacemscommon.service.PaymentService +-down- com.woonders.lacemscommon.service.PaymentService.ProcessingCode


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
